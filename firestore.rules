rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        request.auth.token.email.matches('.*@example\\.com$');
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection and all nested collections
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAdmin();

      // Library collection
      match /library/{mediaType} {
        allow read: if isAuthenticated();
        allow write: if isOwner(userId);

        // Entries subcollection
        match /entries/{entryId} {
          allow read: if isAuthenticated();
          allow write: if isOwner(userId);
        }
      }
    }

    // Media collection
    match /media/{mediaId} {
      allow read: if true;
      allow write: if isAuthenticated();  // Allow authenticated users to update media stats

      // Media stats subcollection
      match /stats/{statsId} {
        allow read: if true;
        allow write: if isAuthenticated();
      }
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if isAdmin() || 
        (isAuthenticated() && resource.data.userId == request.auth.uid);
    }

    // Recommendations collection
    match /recommendations/{recommendationId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow write: if isAdmin();
    }
  }
} 